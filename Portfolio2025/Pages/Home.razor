@page "/"
@using Microsoft.AspNetCore.Components.Sections
@using Portfolio2025.Components
@using Portfolio2025.Model

<PageTitle>Home</PageTitle>

<SectionContent SectionName="hero-frame">
	<div class="mud-theme-primary" style="width: 100%; height: 250px;"></div>
</SectionContent>

<MainPicture Size="250" Top="-235" Style="margin: 10px;">
	<h1 style="text-align: center; margin-top: 10px;">Paul Maget</h1>
	<MudDivider />
	<h2 style="text-align: center">Développeur C#</h2>
</MainPicture>	

<!--<h1>Mes Compétences</h1>-->
<AlternatingList Style="margin: 20px" RowStyle="margin: 10px">
	
	<AlternatingListItem>
		<Template>
			<CompetenceCircle Source="Competences.CSharp"
							  IsPopoverOpen="@OpenedCompetencePopovers[0]"
							  OnClick="@(() => OnCompetencePopoverClick(0))"
							  OnClosed="@(() => OnCompetencePopoverClosed(0))" />
		</Template>
	</AlternatingListItem>

	<AlternatingListItem>
		<Template>
			<CompetenceCircle Source="Competences.JavaScript"
							  IsPopoverOpen="@OpenedCompetencePopovers[1]"
							  OnClick="@(() => OnCompetencePopoverClick(1))"
							  OnClosed="@(() => OnCompetencePopoverClosed(1))" />
		</Template>
	</AlternatingListItem>

	@* Asp.Net *@

	<AlternatingListItem>
		<Template>
			<CompetenceCircle Source="Competences.Angular"
							  IsPopoverOpen="@OpenedCompetencePopovers[2]"
							  OnClick="@(() => OnCompetencePopoverClick(2))"
							  OnClosed="@(() => OnCompetencePopoverClosed(2))" />
		</Template>
	</AlternatingListItem>

	<AlternatingListItem>
		<Template>
			<CompetenceCircle Source="Competences.Angular"
							  IsPopoverOpen="@OpenedCompetencePopovers[3]"
							  OnClick="@(() => OnCompetencePopoverClick(3))"
							  OnClosed="@(() => OnCompetencePopoverClosed(3))" />
		</Template>
	</AlternatingListItem>

	<AlternatingListItem>
		<Template>
			<CompetenceCircle Source="Competences.Unity"
							  IsPopoverOpen="@OpenedCompetencePopovers[4]"
							  OnClick="@(() => OnCompetencePopoverClick(4))"
							  OnClosed="@(() => OnCompetencePopoverClosed(4))" />
		</Template>
	</AlternatingListItem>
	
	@* <AlternatingListItem>
		<Template>
			<CompetenceCircle Icon="@Icons.Material.Filled.Girl"
				IsPopoverOpen="@OpenedCompetencePopovers[1]"
				OnClick="@(() => OnCompetencePopoverClick(1))"
				OnClosed="@(() => OnCompetencePopoverClosed(1))" />
		</Template>
	</AlternatingListItem>
	<AlternatingListItem>
		<Template>
			<CompetenceCircle Icon="@Icons.Material.Filled.Delete"
				IsPopoverOpen="@OpenedCompetencePopovers[2]"
				OnClick="@(() => OnCompetencePopoverClick(2))"
				OnClosed="@(() => OnCompetencePopoverClosed(2))" />
		</Template>
	</AlternatingListItem>
	<AlternatingListItem>
		<Template>
			<CompetenceCircle Icon="@Icons.Material.Filled.Grain"
				IsPopoverOpen="@OpenedCompetencePopovers[3]"
				OnClick="@(() => OnCompetencePopoverClick(3))"
				OnClosed="@(() => OnCompetencePopoverClosed(3))" />
		</Template>
	</AlternatingListItem>
	<AlternatingListItem>
		<Template>
			<CompetenceCircle Icon="@Icons.Material.Filled.Group"
				IsPopoverOpen="@OpenedCompetencePopovers[4]"
				OnClick="@(() => OnCompetencePopoverClick(4))"
				OnClosed="@(() => OnCompetencePopoverClosed(4))" />
		</Template>
	</AlternatingListItem> *@
</AlternatingList>

<MudStack AlignItems="AlignItems.End">
	<MudButton Href="./competences">Voir plus</MudButton>
</MudStack>

<MudDivider />

<h1>Mes Expériences</h1>

<MudGrid Style="padding: 40px">
	@* <MudItem xs="3">
		<ExperienceCard Title="Hello World!" Description="This is the description of an Hello World.<br>I like it 10/10!" />
	</MudItem> *@

	<MudItem xs="4">
		<ExperienceCard Source=Experiences.OrganizingHistory/>
	</MudItem>

	<MudItem xs="4">
		<ExperienceCard Source=Experiences.StageMJC />
	</MudItem>
	
	<MudItem xs="4">
		<ExperienceCard />
	</MudItem>
	
</MudGrid>

<MudDivider />

<h1>A propos de moi</h1>

<div class="about-me">
	<MudText Typo="Typo.body1">
		Passionné d'informatique, je me suis spécialisé en C# après avoir fait un BUT informatique généraliste.<br />
		Mes compétences couvrent la conception orientée objet, le développement web / mobile, la gestion de projet et le jeu vidéo avec Unity.
	</MudText>

	<MudText Typo="Typo.body1">
		J'ai l'habitude d'apprendre en autodidacte, je suis curieux et autonome.<br />
		Je suis particulièrement intéressé par la conception d'architecture, le développement backend et le jeu vidéo.
	</MudText>
</div>

<MudDivider />

<MudStack AlignItems="AlignItems.Center">
	<MudButton Color="Color.Secondary" Variant="Variant.Filled" DropShadow=true Style="margin: 40px; min-width: 45%; padding: 1.2em">
		Me contacter
	</MudButton>
</MudStack>

<style>
	.mud-divider {
		margin: 20px;
	}
	.about-me {
		padding: 40px;
	}
	.about-me p {
		margin: 1em;
		text-align: center;
	}
</style>

@code {

	bool[] OpenedCompetencePopovers { get; set; } = [false, false, false, false, false];

	public void OnCompetencePopoverClick(int index)
	{
		bool selectedCurrentValue = OpenedCompetencePopovers[index];

		OpenedCompetencePopovers = OpenedCompetencePopovers.Select((b) => false).ToArray();

		OpenedCompetencePopovers[index] = !selectedCurrentValue;
	}

	public void OnCompetencePopoverClosed(int index)
	{
		OpenedCompetencePopovers[index] = false;
	}
}