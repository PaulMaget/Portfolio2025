@page "/"
@using Microsoft.AspNetCore.Components.Sections
@using Portfolio2025.Components
@using Portfolio2025.Model

<SectionContent SectionName="hero-frame">
	<div style="width: 100%; height: 250px; overflow: hidden">
		<MudImage Style="width: 100%" Height="250" ObjectFit="ObjectFit.None" ObjectPosition="ObjectPosition.Center"
				  Src="@(IsDarkMode
							  ? "./images/AbstractBackground1_transparent.png"
									  : "./images/AbstractBackground1_light.png")" />
	</div>
</SectionContent>

<MainPicture Size="250" Top="-235" Style="margin: 10px;">
	<h1 style="text-align: center; margin-top: 10px;">Paul Maget</h1>
	<MudDivider DividerType="DividerType.Middle" />
	<h2 style="text-align: center">Développeur C#</h2>
</MainPicture>	

<!--<h1>Mes Compétences</h1>-->
<AlternatingList Style="margin: 5% 0" RowStyle="margin: 2%">
	
	<AlternatingListItem>
		<Template>
			<CompetenceCircle Source="Competences.CSharp"
							  IsPopoverOpen="@OpenedCompetencePopovers[0]"
							  OnClick="@(() => OnCompetencePopoverClick(0))"
							  OnClosed="@(() => OnCompetencePopoverClosed(0))" />
		</Template>
	</AlternatingListItem>

	<AlternatingListItem>
		<Template>
			<CompetenceCircle Source="Competences.JavaScript"
							  IsPopoverOpen="@OpenedCompetencePopovers[1]"
							  OnClick="@(() => OnCompetencePopoverClick(1))"
							  OnClosed="@(() => OnCompetencePopoverClosed(1))" />
		</Template>
	</AlternatingListItem>

	@* Asp.Net *@

	<AlternatingListItem>
		<Template>
			<CompetenceCircle Source="Competences.AspNet"
							  IsPopoverOpen="@OpenedCompetencePopovers[2]"
							  OnClick="@(() => OnCompetencePopoverClick(2))"
							  OnClosed="@(() => OnCompetencePopoverClosed(2))" />
		</Template>
	</AlternatingListItem>

	<AlternatingListItem>
		<Template>
			<CompetenceCircle Source="Competences.Angular"
							  IsPopoverOpen="@OpenedCompetencePopovers[3]"
							  OnClick="@(() => OnCompetencePopoverClick(3))"
							  OnClosed="@(() => OnCompetencePopoverClosed(3))" />
		</Template>
	</AlternatingListItem>

	<AlternatingListItem>
		<Template>
			<CompetenceCircle Source="Competences.Unity"
							  IsPopoverOpen="@OpenedCompetencePopovers[4]"
							  OnClick="@(() => OnCompetencePopoverClick(4))"
							  OnClosed="@(() => OnCompetencePopoverClosed(4))" />
		</Template>
	</AlternatingListItem>
</AlternatingList>

<MudStack AlignItems="AlignItems.End">
	<MudButton Variant="Variant.Filled" Color="Color.Primary" Href="./competences">Voir plus</MudButton>
</MudStack>

<MudDivider DividerType="DividerType.Middle" />

@* <h1>A propos de moi</h1> *@

<div class="about-me">
	<MudText Typo="Typo.body1">
		Passionné d'informatique, je me suis spécialisé en C# après avoir fait un BUT informatique généraliste.<br />
		Mes compétences couvrent la conception orientée objet, le développement web / mobile, la gestion de projet et le jeu vidéo avec Unity.
	</MudText>

	<MudText Typo="Typo.body1">
		J'ai l'habitude d'apprendre en autodidacte, je suis curieux et autonome.<br />
		Je suis particulièrement intéressé par la conception d'architecture, le développement backend et le jeu vidéo.
	</MudText>
</div>

<MudDivider DividerType="DividerType.Middle" />

<h1>Mes Expériences</h1>

<MudGrid Style="padding: 40px">
	<MudItem xs="12" sm="12" md="12" lg="4">
		<ExperienceCard Source="Experiences.AlternanceAlpilink"/>
	</MudItem>
	
	<MudItem xs="12" sm="12" md="12" lg="4">
		<ExperienceCard Source=Experiences.OrganizingHistory/>
	</MudItem>

	<MudItem xs="12" sm="12" md="12" lg="4">
		<ExperienceCard Source=Experiences.StageMJC />
	</MudItem>
</MudGrid>

<MudDivider DividerType="DividerType.Middle" />

<MudStack AlignItems="AlignItems.Center">
	<MudButton Href="./contact" Color="Color.Secondary" Variant="Variant.Filled" DropShadow=true Style="margin: 40px; min-width: 45%; padding: 1.2em">
		Me contacter
	</MudButton>
</MudStack>

<style>
	.mud-divider {
		margin: 20px;
	}
	.about-me {
		padding: 40px;
	}
	.about-me p {
		margin: 1em;
		text-align: center;
	}
</style>

@code {
	[CascadingParameter]
	protected bool IsDarkMode { get; set; }

	bool[] OpenedCompetencePopovers { get; set; } = [false, false, false, false, false];

	public void OnCompetencePopoverClick(int index)
	{
		bool selectedCurrentValue = OpenedCompetencePopovers[index];

		OpenedCompetencePopovers = OpenedCompetencePopovers.Select((b) => false).ToArray();

		OpenedCompetencePopovers[index] = !selectedCurrentValue;
	}

	public void OnCompetencePopoverClosed(int index)
	{
		OpenedCompetencePopovers[index] = false;
	}
}