@page "/experiences/{id:int}"
@using Microsoft.AspNetCore.Components.Sections
@using Portfolio2025.Components
@using Portfolio2025.Model

@if (Source == null)
{
    <MudAlert Severity="Severity.Error" Class="mt-4">La page demandée n'existe pas.</MudAlert>
    return;
}

<h1>@(Source?.Name)</h1>
<h2>@(Source?.Organization) - @(Source?.Year)</h2>

@if (Source?.Competences.Any() ?? false)
{
    <MudStack Row=true AlignItems="AlignItems.Center" Justify="Justify.SpaceEvenly">
        @foreach (Competence item in Source?.Competences ?? [])
        {
            <CompetenceCircle Source="item" />
        }
    </MudStack>
}

@if (Source?.HardSkills.Any() ?? false)
{
    <MudGrid Justify="Justify.Center" Style="margin: auto; width: 90%; margin-top: 1.5em;">
        @foreach (string item in Source?.HardSkills ?? [])
        {
            <MudItem xs="12" sm="12" md="12" lg="6" xl="4" xxl="3" Style="padding: 0">
                <MudStack Row=true Justify="Justify.Center">
                    <MudChip T="string" Label="true">@item</MudChip>
                </MudStack>
            </MudItem>
        }
    </MudGrid>
}

@if (Source?.SoftSkills.Any() ?? false)
{
    <MudGrid Justify="Justify.Center" Style="margin: auto; width: 90%; margin-top: 1.5em;">
        @foreach (string item in Source?.SoftSkills ?? [])
        {
            <MudItem xs="12" sm="12" md="12" lg="6" xl="4" xxl="3" Style="padding: 0">
                <MudStack Row=true Justify="Justify.Center">
                    <MudChip T="string" Label="false">@item</MudChip>
                </MudStack>
            </MudItem>
        }
    </MudGrid>
}

<MudDivider Style="margin: 1.5em" DividerType="DividerType.Middle"/>

@((MarkupString)(Source?.HtmlDescription ?? ""))

<style>
    p {
        margin: 1em;
    }

    img {
        max-width: 100%;
        display: block;
        margin: auto;
    }
</style>

@code {
    [Parameter]
    public required int Id { get; set; }

    public Experience? Source => Experiences.All.ElementAtOrDefault(Id);
}
