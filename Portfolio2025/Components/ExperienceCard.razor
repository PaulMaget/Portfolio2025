@using Portfolio2025.Model

<MudCard Class="@(IsActivated ? "active" : "inactive")" Elevation="@(IsActivated ? 3 : 1)"
	onmouseenter="@( () => OnActivate())"
	onfocus="@(() => OnActivate())"
	onmouseleave="@(() => OnDeactivate())"
	onblur="@(() => OnDeactivate())">
	
	@if (Source?.ImageUrl != null)
	{
		<MudCardMedia Style="flex-shrink: 0;" Image="@Source?.ImageUrl" />
	}
	<MudCardHeader>
		<CardHeaderContent>
			<h2>@(Source?.Name ?? "")</h2>
		</CardHeaderContent>
	</MudCardHeader>

	@if (IsActivated)
	{
		<div class="card-description-container">
			<MudText Style="text-overflow: ellipsis;">
				@((MarkupString)(Source?.ShortHtmlDescription ?? ""))
			</MudText>
		</div>
	}
	else
	{
		<div style="flex-grow:1"></div>
	}
	<MudCardActions Class="card-actions-container">
		<MudButton Href="@("./experiences-" + Source?.GetId())">
			Voir plus
		</MudButton>
	</MudCardActions>
</MudCard>

<style>
	.mud-card {
		height: 370px;
		overflow: hidden;
	}

	.mud-card.active {
		transition: 0.2s;
		scale: 1.08;
		border-width: thin;
		border-color: var(--mud-palette-divider);
	}

	.mud-card.inactive {
			transition: 0.2s;
		scale: 1;
		border-width: thin;
		border-color: var(--mud-palette-divider);
	}

	.mud-card.active .mud-card-media {
		transition: 0.2s;
		max-height: 100px;
	}

	.mud-card.inactive .mud-card-media {
		transition: 0.2s;
		max-height: 190px;
	}

	.card-actions-container {
		transition: 0.2s;
		flex-grow: 0;
		flex-shrink: 1
	}

	.mud-card.active .card-actions-container {
		flex-shrink: 0;
	}

	.mud-card .card-description-container{
		flex-grow: 1;
		flex-shrink: 1;
		overflow: hidden;
		padding-left: 1em;
		padding-right: 1em;
	}
</style>

@code {
	[Parameter]
	public Experience? Source { get; set; }

	//[Parameter]
	//public string ImageUrl { get; set; } = "https://placehold.co/50x50";

	// [Parameter]
	// public string Title { get; set; } = "";

	// [Parameter]
	// public string Description { get; set; } = "";

	public bool IsActivated { get; set; } = false;

	public void OnActivate()
	{
		IsActivated = true;
	}

	public void OnDeactivate()
	{
		IsActivated = false;
	}
}
